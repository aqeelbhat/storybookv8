import {
  AddContext,
  Anchor,
  AnchorMdx,
  ArgTypes,
  ArgsTable,
  BooleanControl,
  Canvas,
  CodeOrSourceMdx,
  ColorControl,
  ColorItem,
  ColorPalette,
  Controls3,
  DateControl,
  DescriptionContainer,
  DescriptionType,
  Docs,
  DocsContainer,
  DocsContext,
  DocsPage,
  DocsStory,
  ExternalDocs,
  ExternalDocsContainer,
  FilesControl,
  HeaderMdx,
  HeadersMdx,
  Heading2,
  IconGallery,
  IconItem,
  Markdown2,
  Meta,
  NumberControl,
  ObjectControl,
  OptionsControl,
  PRIMARY_STORY,
  Primary,
  RangeControl,
  Source2,
  SourceContainer,
  SourceContext,
  Stories,
  Story2,
  Subheading,
  Subtitle2,
  TextControl,
  Title2,
  Typeset,
  UNKNOWN_ARGS_HASH,
  Unstyled,
  Wrapper11,
  anchorBlockIdFromId,
  argsHash,
  assertIsFn,
  extractTitle,
  format,
  formatDate,
  formatTime,
  getStoryId2,
  getStoryProps,
  parse2,
  parseDate,
  parseTime,
  useOf,
  useSourceProps
} from "./chunk-GFPIKIEX.js";
import "./chunk-DWDUA27E.js";
import "./chunk-2ALG2IIB.js";
import "./chunk-LUSQYUR3.js";
import "./chunk-UQWVPZBH.js";
import "./chunk-5X2M4ZW7.js";
import "./chunk-4KRBQUVC.js";
import "./chunk-4Q7NVJJE.js";
import "./chunk-MOSGNJVM.js";
import "./chunk-MKXNLD5V.js";
import "./chunk-ILGTCP3B.js";
import "./chunk-5NOHXVXK.js";
import "./chunk-2JLJS6YF.js";
import {
  require_client
} from "./chunk-XLQ336XW.js";
import "./chunk-G5FW65QQ.js";
import "./chunk-5SMCBIFY.js";
import "./chunk-HTOLHPKM.js";
import {
  require_react
} from "./chunk-F2MJ3SND.js";
import "./chunk-HOJRHXXE.js";
import {
  __toESM
} from "./chunk-WGAPYIUP.js";

// node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs
var import_react2 = __toESM(require_react(), 1);

// node_modules/@storybook/react-dom-shim/dist/react-18.mjs
var import_react = __toESM(require_react(), 1);
var import_client = __toESM(require_client(), 1);
var nodes = /* @__PURE__ */ new Map();
var WithCallback = ({ callback, children }) => {
  let once = (0, import_react.useRef)();
  return (0, import_react.useLayoutEffect)(() => {
    once.current !== callback && (once.current = callback, callback());
  }, [callback]), children;
};
var renderElement = async (node, el) => {
  let root = await getReactRoot(el);
  return new Promise((resolve) => {
    root.render(import_react.default.createElement(WithCallback, { callback: () => resolve(null) }, node));
  });
};
var unmountElement = (el, shouldUseNewRootApi) => {
  let root = nodes.get(el);
  root && (root.unmount(), nodes.delete(el));
};
var getReactRoot = async (el) => {
  let root = nodes.get(el);
  return root || (root = import_client.default.createRoot(el), nodes.set(el, root)), root;
};

// node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs
var defaultComponents = { code: CodeOrSourceMdx, a: AnchorMdx, ...HeadersMdx };
var ErrorBoundary = class extends import_react2.Component {
  constructor() {
    super(...arguments);
    this.state = { hasError: false };
  }
  static getDerivedStateFromError() {
    return { hasError: true };
  }
  componentDidCatch(err) {
    let { showException } = this.props;
    showException(err);
  }
  render() {
    let { hasError } = this.state, { children } = this.props;
    return hasError ? null : import_react2.default.createElement(import_react2.default.Fragment, null, children);
  }
};
var DocsRenderer = class {
  constructor() {
    this.render = async (context, docsParameter, element) => {
      let components = { ...defaultComponents, ...docsParameter == null ? void 0 : docsParameter.components }, TDocs = Docs;
      return new Promise((resolve, reject) => {
        import("./@mdx-js_react.js").then(({ MDXProvider }) => renderElement(import_react2.default.createElement(ErrorBoundary, { showException: reject, key: Math.random() }, import_react2.default.createElement(MDXProvider, { components }, import_react2.default.createElement(TDocs, { context, docsParameter }))), element)).then(() => resolve());
      });
    }, this.unmount = (element) => {
      unmountElement(element);
    };
  }
};
export {
  AddContext,
  Anchor,
  AnchorMdx,
  ArgTypes,
  BooleanControl,
  Canvas,
  CodeOrSourceMdx,
  ColorControl,
  ColorItem,
  ColorPalette,
  Controls3 as Controls,
  DateControl,
  DescriptionContainer as Description,
  DescriptionType,
  Docs,
  DocsContainer,
  DocsContext,
  DocsPage,
  DocsRenderer,
  DocsStory,
  ExternalDocs,
  ExternalDocsContainer,
  FilesControl,
  HeaderMdx,
  HeadersMdx,
  Heading2 as Heading,
  IconGallery,
  IconItem,
  Markdown2 as Markdown,
  Meta,
  NumberControl,
  ObjectControl,
  OptionsControl,
  PRIMARY_STORY,
  Primary,
  ArgsTable as PureArgsTable,
  RangeControl,
  Source2 as Source,
  SourceContainer,
  SourceContext,
  Stories,
  Story2 as Story,
  Subheading,
  Subtitle2 as Subtitle,
  TextControl,
  Title2 as Title,
  Typeset,
  UNKNOWN_ARGS_HASH,
  Unstyled,
  Wrapper11 as Wrapper,
  anchorBlockIdFromId,
  argsHash,
  assertIsFn,
  extractTitle,
  format,
  formatDate,
  formatTime,
  getStoryId2 as getStoryId,
  getStoryProps,
  parse2 as parse,
  parseDate,
  parseTime,
  useOf,
  useSourceProps
};
//# sourceMappingURL=@storybook_addon-docs.js.map
