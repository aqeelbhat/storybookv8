import React from "react";
import { StoryFn } from "@storybook/react";

import { UseForm, UseFormProps, UseFormData } from "./../../lib";
import {
  mockOptionsDefault,
  mockOptionsDefault2,
  mockOptionsRegion,
} from "./../MultiLevelSelect/mocks";

const formData: UseFormData = {
  title: "",
  region: undefined,
  service: [],
  subsidiary: undefined,
  additionalSubsidiary: [],
  user: "user",
  department: undefined,
  comment: "",
};

//ðŸ‘‡ This default export determines where your story goes in the story list
export default {
  title: "ORO UI Toolkit/Form/Use Form",
  component: UseForm,
};

export const TemplateForm = {
  args: {
    fields: [
      {
        booleanValue: "true",
        configOnly: false,
        displayType: "fieldRequirement",
        fieldName: "title",
        instruction: null,
        modifiable: false,
        order: 1,
        requirement: "required",
        sectionTitle: null,
        stringValue: null,
        title: "Title",
        type: "string",
        validationPath: null,
        validationSubpath: null,
      },
      {
        booleanValue: "true",
        configOnly: false,
        displayType: "fieldRequirement",
        fieldName: "region",
        instruction: null,
        modifiable: true,
        order: 2,
        requirement: "required",
        sectionTitle: null,
        stringValue: null,
        title: "Country or region supplier is used",
        type: "string",
        validationPath: null,
        validationSubpath: null,
      },
      {
        booleanValue: "true",
        configOnly: false,
        displayType: "fieldRequirement",
        fieldName: "categories",
        instruction: null,
        modifiable: true,
        order: 3,
        requirement: "required",
        sectionTitle: null,
        stringValue: null,
        title: "Services offered by the supplier",
        type: "string",
        validationPath: null,
        validationSubpath: null,
      },
      {
        booleanValue: "true",
        configOnly: false,
        displayType: "fieldRequirement",
        fieldName: "companyEntity",
        instruction: null,
        modifiable: true,
        order: 4,
        requirement: "required",
        sectionTitle: null,
        stringValue: null,
        title: "Primary subsidiary",
        type: "string",
        validationPath: null,
        validationSubpath: null,
      },
      {
        booleanValue: "true",
        configOnly: false,
        displayType: "fieldRequirement",
        fieldName: "additionalCompanyEntities",
        instruction: null,
        modifiable: true,
        order: 5,
        requirement: "optional",
        sectionTitle: null,
        stringValue: null,
        title: "Primary subsidiary",
        type: "string",
        validationPath: null,
        validationSubpath: null,
      },
      {
        booleanValue: "true",
        configOnly: false,
        displayType: "fieldRequirement",
        fieldName: "department",
        instruction: null,
        modifiable: true,
        order: 4,
        requirement: "required",
        sectionTitle: null,
        stringValue: null,
        title: "Department",
        type: "string",
        validationPath: null,
        validationSubpath: null,
      },
      {
        booleanValue: "true",
        configOnly: false,
        displayType: "fieldRequirement",
        fieldName: "comment",
        instruction: null,
        modifiable: true,
        order: 6,
        requirement: "required",
        sectionTitle: null,
        stringValue: null,
        title: "Comment/Details",
        type: "string",
        validationPath: null,
        validationSubpath: null,
      },
    ],
    regionOptions: mockOptionsRegion,
    categoryOptions: mockOptionsDefault,
    subsidiaryOptions: mockOptionsDefault,
    departmentOptions: mockOptionsDefault,
    additionalSubsidiaryOptions: mockOptionsDefault2,
    formData,
    submitLabel: "Submit",
    onReady: () => {},
  },
};
