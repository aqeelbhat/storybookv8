import React from "react";
import { StoryFn } from "@storybook/react";

import { getI18NInstance } from "../../../lib/i18n";
import { SupplierPaymentDetailsFormProps } from "../../../lib/Form/BankInfoV3";
import {
  mockCompanyEntities,
  mockCountryOptions,
  mockCurrencyOptions,
} from "../../MultiLevelSelect/mocks";
import { bankKeys } from "../../mocks/bankKeys";
import { DEFAULT_CURRENCY } from "../../../lib/util";
import { SupplierPaymentDetailsReadOnlyV4 } from "../../../lib";

export default {
  title: "ORO UI Toolkit/Form/BankInfo V4 Form",
  component: SupplierPaymentDetailsReadOnlyV4,
};

getI18NInstance(true);

export const ReadOnlyForm = {
  args: {
    formData: {
      businessEmail: "ar.p&g@gmai.com",
      paymentDetails: [
        {
          bankInformation: {
            bankAddress: { alpha2CountryCode: "US" },
            bankName: "CITI",
            bankNameAutoGenerated: true,
            accountHolder: "Microsoft",
            accountHolderAddress: {
              line1: "1101 W McKinley Avenue",
              city: "Pomona",
              province: "California",
              alpha2CountryCode: "US",
              postal: "91768",
            },
            accountType: "", // saving/checking
            accountNumber: {
              maskedValue: "",
              unencryptedValue: "12312312341413",
            },
            // accountNumberAutoGenerated: true,
            paymentAddress: "", // bankgiro
            key: "aba",
            bankCode: "63563GDF23",
            bankCodeError: false,
            isIbanAvailable: true, // for iban recommended countries
            internationalKey: "iban",
            encryptedInternationalBankCode: {
              maskedValue: "",
              unencryptedValue: "12312312341413",
            },
            internationalCodeError: false,
            swiftCode: "13414GR",
            swiftCodeAutoGenerated: true,
            swiftCodeError: false,
            checkDeliveryAddress: {
              line1: "1101 W McKinley Avenue",
              city: "Pomona",
              province: "California",
              alpha2CountryCode: "IN",
              postal: "91768",
            },
          },
          companyEntities: [mockCompanyEntities[3]],
          paymentModes: [
            // { companyEntityCountry: 'US', type: 'check', currencyCode: DEFAULT_CURRENCY },
            {
              companyEntityCountry: "IN",
              type: "ach",
              currencyCode: "INR",
              additionalCurrencyRequested: "USD",
            },
          ],
        },
        {
          bankInformation: {
            bankAddress: { alpha2CountryCode: "IN" },
            bankName: "CHASE",
            bankNameAutoGenerated: true,
            accountHolder: "P&G North America",
            accountHolderAddress: {
              line1: "1101 W McKinley Avenue",
              city: "Pomona",
              province: "California",
              alpha2CountryCode: "IN",
              postal: "91768",
            },
            accountType: "", // saving/checking
            accountNumber: {
              maskedValue: "*********1413",
              unencryptedValue: "",
            },
            // accountNumberAutoGenerated: true,
            paymentAddress: "", // bankgiro
            key: "aba",
            bankCode: "63563GDF23",
            bankCodeError: false,
            isIbanAvailable: true, // for iban recommended countries
            internationalKey: "iban",
            encryptedInternationalBankCode: {
              maskedValue: "*********1413",
              unencryptedValue: "",
            },
            internationalCodeError: false,
            swiftCode: "13414GR",
            swiftCodeAutoGenerated: true,
            swiftCodeError: false,
            checkDeliveryAddress: {
              line1: "1101 W McKinley Avenue",
              city: "Pomona",
              province: "California",
              alpha2CountryCode: "IN",
              postal: "91768",
            },
          },
          companyEntities: [mockCompanyEntities[3]],
          paymentModes: [
            // { companyEntityCountry: 'US', type: 'check', currencyCode: DEFAULT_CURRENCY },
            { companyEntityCountry: "IN", type: "online", currencyCode: "INR" },
          ],
        },
      ],
      instruction: "Please involve finance team to review the data.",
    },
    fields: [{ fieldName: "businessEmail", requirement: "required" }],
    countryOptions: mockCountryOptions,
    // companyEntities: mockCompanyEntities,
    currencyOptions: mockCurrencyOptions,
    paymentModeConfig: [
      { alpha2Code: "US", domestic: ["check", "ach"], international: ["ach"] },
      {
        alpha2Code: "MX",
        domestic: ["check", "wire", "online"],
        international: ["wire", "online"],
      },
      {
        alpha2Code: "default",
        domestic: ["invoice", "online"],
        international: ["online"],
      },
    ],
    bankProofConfig: [
      {
        alpha2Code: "US",
        documents: ["bankletter", "estatement", "letterhead"],
      },
      { alpha2Code: "MX", documents: ["estatement", "letterhead"] },
    ],
    bankKeys,
    partnerName: "Microsoft",
    partnerCountry: "US",
    getCrossBorderStatuses: () => Promise.resolve({ US: true, IN: false }),
    getCountryBankKeys: () =>
      Promise.resolve({
        domesticList: ["ifsc"],
        domesticIbanMandatory: "notSupported",
        internationalIbanMandatory: "notSupported",
      }),
  },
};
