import React from "react";
import { StoryFn } from "@storybook/react";
import {
  mockCostCenters,
  mockCurrencyOptions,
} from "../../MultiLevelSelect/mocks";
import { getI18NInstance } from "../../../lib/i18n";
import type {
  InvoiceDetailsItemListProps,
  InvoiceDetailsItemListFormData,
} from "../../../lib/Form/InvoiceDetailsItemList/types";
import "./../../common.scss";
import { InvoiceDetailsItemListForm } from "../../../lib";
import { DEFAULT_CURRENCY } from "../../../lib/util";

const formData: InvoiceDetailsItemListFormData = {
  itemList: {
    items: [
      {
        name: "Apple Smart Phone, Full Size\nPhones, Technology, TEC-PH-3148",
        description: "",
        categories: [],
        departments: [],
        type: null,
        materialId: "",
        quantity: 6,
        unitForQuantity: null,
        lineNumber: "1",
        price: {
          amount: 3817.26,
          currency: "USD",
        },
        totalPrice: {
          amount: 22903.56,
          currency: "USD",
        },
        tenantPrice: {
          amount: 3474.9749658625396,
          currency: "EUR",
        },
        tenantTotalPrice: {
          amount: 20849.84979517524,
          currency: "EUR",
        },
        images: [],
        supplierPartId: "",
        manufacturerPartId: "",
        accountCodeIdRef: null,
        erpItemId: null,
        url: "",
        specifications: [],
        customAttributes: null,
        tax: null,
        contacts: null,
        accounting: null,
        trackCode: [],
        itemIds: [],
        lineOfBusiness: null,
        location: null,
        projectCode: null,
        expenseCategory: null,
        nonInventoryPurchaseItem: null,
        accumulator: {
          quantityReceived: undefined,
          quantityBilled: 0.0,
        },
        startDate: null,
        endDate: null,
        normalizedVendorRef: null,
        costCenter: null,
        data: {},
        dataJson: "{}",
      },
      {
        name: "Shipping",
        description: "Shipping",
        categories: [
          {
            id: "ALL",
            name: "All",
            erpId: "ALL",
            empty: false,
          },
        ],
        departments: [],
        type: null,
        materialId: "",
        quantity: 1,
        unitForQuantity: {
          name: "1 Bag",
          id: "123",
          erpId: "id1",
        },
        lineNumber: "2",
        price: {
          amount: 678.15,
          currency: "USD",
        },
        totalPrice: {
          amount: 678.15,
          currency: "USD",
        },
        tenantPrice: {
          amount: 617.3418297678652,
          currency: "EUR",
        },
        tenantTotalPrice: {
          amount: 617.3418297678652,
          currency: "EUR",
        },
        images: [],
        supplierPartId: "",
        manufacturerPartId: "",
        accountCodeIdRef: {
          id: "6080",
          name: "Equipment Rental",
          erpId: "75",
          empty: false,
        },
        erpItemId: null,
        url: "",
        specifications: [],
        customAttributes: null,
        tax: null,
        contacts: null,
        accounting: null,
        trackCode: [],
        itemIds: [],
        lineOfBusiness: null,
        location: null,
        projectCode: null,
        expenseCategory: null,
        nonInventoryPurchaseItem: null,
        accumulator: null,
        startDate: null,
        endDate: null,
        normalizedVendorRef: null,
        costCenter: {
          id: "1000",
          name: "Cost Center 1",
          erpId: "1000",
          empty: false,
        },
        data: {},
        dataJson: "{}",
      },
    ],
  },
};

export default {
  title: "ORO UI Toolkit/Form/Invoice Details/Normal",
  component: InvoiceDetailsItemListForm,
};

getI18NInstance(true);

export const TemplateForm = {
  args: {
    subTotalMoney: {
      amount: 23581.71,
      currency: "USD",
    },
    fields: [
      {
        fieldName: "itemList",
        requirement: "required",
        booleanValue: true,
        stringValue: true,
        intValue: false,
        itemConfig: {
          displayFields: ["name", "quantity", "price", "tax", "totalPrice"],
          visibleFields: [
            "accountCode",
            "categories",
            "costCenter",
            "customAttributes",
            "departments",
            "description",
            "endDate",
            "expenseCategory",
            "images",
            "itemIds",
            "lineNumber",
            "lineOfBusiness",
            "location",
            "manufacturerPartId",
            "materialId",
            "price",
            "projectCode",
            "quantity",
            "specifications",
            "startDate",
            "tax",
            "totalPrice",
            "trackCode",
            "type",
            "unitForQuantity",
            "url",
            "vendor",
          ],
          mandatoryFields: [
            "accountCode",
            "categories",
            "costCenter",
            "customAttributes",
            "departments",
            "description",
            "endDate",
            "expenseCategory",
            "images",
            "itemIds",
            "lineNumber",
            "lineOfBusiness",
            "location",
            "manufacturerPartId",
            "materialId",
            "price",
            "projectCode",
            "quantity",
            "specifications",
            "startDate",
            "tax",
            "totalPrice",
            "trackCode",
            "type",
            "unitForQuantity",
            "url",
            "vendor",
          ],
          readonlyFields: ["name"],
        },
        title: "Items List",
        __typename: "FormField",
      },
      {
        fieldName: "lineItemsRequired",
        requirement: "optional",
        booleanValue: false,
        stringValue: null,
        intValue: null,
        itemConfig: null,
        title: "Line Items Required",
        questionnaireId: {
          id: null,
          name: "Supplier Identification",
          formId: "OroSupplierDetailForm",
          formDocumentId: null,
          custom: false,
          editMode: false,
          completed: false,
          __typename: "QuestionnaireId",
        },
        __typename: "FormField",
      },
    ],
    formData,
    defaultCurrency: DEFAULT_CURRENCY,
    currencyOptions: mockCurrencyOptions,
    costCenterOptions: mockCostCenters,
    submitLabel: "Submit",
    cancelLabel: "cancel",
    onReady: () => {},
    onSubmit: (data) => {
      console.log("submit data", data);
    },
    onCancel: (data) => {},
  },
};
